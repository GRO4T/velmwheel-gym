// generated from rosidl_adapter/resource/srv.idl.em
// with input from velmwheel_gazebo_msgs/srv/FrictionConfig.srv
// generated code does not contain a copyright notice


module velmwheel_gazebo_msgs {
  module srv {
    @verbatim (language="comment", text=
      "====================================================================================================================================" "\n"
      "@file       FrictionConfig.srv" "\n"
      "@author     Krzysztof Pierczyk (krzysztof.pierczyk@gmail.com)" "\n"
      "@maintainer Krzysztof Pierczyk (krzysztof.pierczyk@gmail.com)" "\n"
      "@date       Thursday, 28th April 2022 7:10:38 pm" "\n"
      "@modified   Wednesday, 25th May 2022 11:41:51 pm" "\n"
      "@project    engineering-thesis" "\n"
      "@brief      ROS Service requesting configruation of the friction simuilation parameters. Provideds informations about <mu1> and " "\n"
      "            <mu2> friction coefficients for the `ode` physics engine of Gazebo simulator" "\n"
      "" "\n"
      "" "\n"
      "@see http://gazebosim.org/tutorials?tut=friction&cat=physics" "\n"
      "@copyright Krzysztof Pierczyk Â© 2022" "\n"
      "====================================================================================================================================")
    struct FrictionConfig_Request {
      @verbatim (language="comment", text=
        "Friction value of the vector parallel to the roll's axis (vector perpendicular to the rotation axis);")
      @unit (value="default: 1")
      double mu1;

      @verbatim (language="comment", text=
        "Friction value of the vector perpendicular to the roll's axis (vector of the rotation axis);")
      @unit (value="default: 0")
      double mu2;
    };
    struct FrictionConfig_Response {
      uint8 structure_needs_at_least_one_member;
    };
  };
};
